namespace libMBIN.Models.Structs
{
    public class GcGraphicsGlobals : NMSTemplate
    {
        /* 0x0 */ public float LUTDistanceFlightMultiplier;
        /* 0x4 */ public float SunLightIntensity;
        /* 0x8 */ public float HBAOBias;
        /* 0xC */ public float HBAORadius;
        /* 0x10 */ public float HBAOIntensity;
        /* 0x14 */ public float LightShaftScattering;
        /* 0x18 */ public float LightShaftStrength;
        /* 0x1C */ public float LightShaftBottom;
        /* 0x20 */ public float LightShaftTop;
        /* 0x30 */ public Colour LightShaftColourBottom;
        /* 0x40 */ public Colour LightShaftColourTop;
        /* 0x50 */ public float SunRayDensity;
        /* 0x54 */ public float SunRayDecay;
        /* 0x58 */ public float SunRayExposure;
        /* 0x5C */ public float SunRayWeight;
        /* 0x60 */ public float Brightness;
        /* 0x64 */ public float Contrast;
        /* 0x68 */ public float Saturation;
        /* 0x6C */ public bool Redo_On;
        /* 0x70 */ public float Redo_LightIntensity;
        /* 0x74 */ public float Redo_SkyIntensity;
        /* 0x78 */ public float Redo_BounceIntensity;
        /* 0x7C */ public float New_BounceLightWarp;
        /* 0x80 */ public float New_BounceLightPower;
        /* 0x84 */ public float New_BounceLightIntensity;
        /* 0x88 */ public float New_SkyLightWarp;
        /* 0x8C */ public float New_SkyLightPower;
        /* 0x90 */ public float New_SkyLightIntensity;
        /* 0x94 */ public float New_SideRimWarp;
        /* 0x98 */ public float New_SideRimColourMixer;
        /* 0x9C */ public float New_TopRimWarp;
        /* 0xA0 */ public float New_TopRimColourMixer;
        /* 0xA4 */ public float New_TopRimPower;
        /* 0xA8 */ public float New_TopRimIntensity;
        /* 0xAC */ public float Old_BounceLightWarp;
        /* 0xB0 */ public float Old_BounceLightPower;
        /* 0xB4 */ public float Old_BounceLightIntensity;
        /* 0xB8 */ public float Old_SkyLightWarp;
        /* 0xBC */ public float Old_SkyLightPower;
        /* 0xC0 */ public float Old_SkyLightIntensity;
        /* 0xC4 */ public float Old_SideRimWarp;
        /* 0xC8 */ public float Old_SideRimColourMixer;
        /* 0xCC */ public float Old_TopRimWarp;
        /* 0xD0 */ public float Old_TopRimColourMixer;
        /* 0xD4 */ public float Old_TopRimPower;
        /* 0xD8 */ public float Old_TopRimIntensity;
        /* 0xDC */ public float ModelRendererLightIntensity;
        /* 0xE0 */ public float ScanFresnel;
        /* 0xE4 */ public float ScanClamp;
        /* 0xE8 */ public float ScanAlpha;
        /* 0xF0 */ public Colour ScanColour;
        /* 0x100 */ public bool DebugLinesDepthTest;
        /* 0x101 */ public bool CenterRenderSpaceOffset;
        /* 0x110 */ public TkImGuiSettings ImGui;
        /* 0x2A0 */ public Colour UIColour;
        /* 0x2B0 */ public Colour UIShipColour;
        /* 0x2C0 */ public float HUDMotionXSpring;
        /* 0x2C4 */ public float HUDMotionYSpring;
        /* 0x2C8 */ public float HUDMotionPosSpring;
        /* 0x2CC */ public float HUDMotionX;
        /* 0x2D0 */ public float HUDMotionY;
        /* 0x2D4 */ public float HUDMotionPos;
        /* 0x2D8 */ public float HUDDistance;
        /* 0x2DC */ public float NearClipDistance;
        /* 0x2E0 */ public float FarClipDistance;
        /* 0x2E4 */ public float WarpK;
        /* 0x2E8 */ public float WarpKCube;
        /* 0x2EC */ public float WarpScale;
        /* 0x2F0 */ public float WarpKDispersion;
        /* 0x2F4 */ public int ShadowMapSize;
        /* 0x2F8 */ public float DirectionLightRadius;
        /* 0x2FC */ public float DirectionLightFOV;
        /* 0x300 */ public float DirectionLightShadowBias;
        /* 0x304 */ public float ShadowLength;
        /* 0x308 */ public float ShadowLengthShip;
        /* 0x30C */ public float ShadowLengthSpace;
        /* 0x310 */ public float ShadowLengthStation;
        /* 0x314 */ public float ShadowLengthCameraView;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x318 */ public byte[] Padding318;
        /* 0x320 */ public Vector4f ShadowSplit;
        /* 0x330 */ public Vector4f ShadowSplitShip;
        /* 0x340 */ public Vector4f ShadowSplitSpace;
        /* 0x350 */ public Vector4f ShadowSplitStation;
        /* 0x360 */ public Vector4f ShadowSplitCameraView;
        /* 0x370 */ public Vector4f ShadowBias;
        /* 0x380 */ public bool ShadowQuantized;
        /* 0x384 */ public float ShadowBillboardOffset;
        /* 0x388 */ public float QuantizeTime;
        /* 0x38C */ public float QuantizeTimeShip;
        /* 0x390 */ public float QuantizeTimeSpace;
        /* 0x394 */ public float QuantizeTimeCameraView;
        /* 0x398 */ public float ToneMapExposure;
        /* 0x39C */ public float HDRExposure;
        /* 0x3A0 */ public float HDRThreshold;
        /* 0x3A4 */ public float HDROffset;
        /* 0x3A8 */ public float LensThreshold;
        /* 0x3AC */ public float LensOffset;
        /* 0x3B0 */ public float LensScale;
        /* 0x3B4 */ public float LensDirt;
        /* 0x3B8 */ public float ToneMapExposureCave;
        /* 0x3BC */ public float HDRExposureCave;
        /* 0x3C0 */ public float HDRThresholdCave;
        /* 0x3C4 */ public float HDROffsetCave;
        /* 0x3C8 */ public float LensThresholdCave;
        /* 0x3CC */ public float LensOffsetCave;
        /* 0x3D0 */ public float LensScaleCave;
        /* 0x3D4 */ public float LensDirtCave;
        /* 0x3D8 */ public float DOFNearPlane;
        /* 0x3DC */ public float DOFFarPlane;
        /* 0x3E0 */ public float DOFNearFadeDistance;
        /* 0x3E4 */ public float DOFNearFadeDistanceManual;
        /* 0x3E8 */ public float DOFFarFadeDistance;
        /* 0x3EC */ public float DOFFarPlaneCave;
        /* 0x3F0 */ public float DOFFarFadeDistanceCave;
        /* 0x3F4 */ public float DOFFarPlaneSpace;
        /* 0x3F8 */ public float DOFFarFadeDistanceSpace;
        /* 0x3FC */ public float DOFFarStrengthWater;
        /* 0x400 */ public float DOFFarPlaneWater;
        /* 0x404 */ public float DOFFarFadeDistanceWater;
        /* 0x408 */ public float DOFFarPlaneManual;
        /* 0x40C */ public float DOFFarFadeDistanceManual;
        /* 0x410 */ public float DOFNearMinInteraction;
        /* 0x414 */ public float DOFNearAdjustInteraction;
        /* 0x418 */ public float DOFFarPlaneInteraction;
        /* 0x41C */ public float DOFFarFadeDistanceInteraction;
        /* 0x420 */ public bool DOFEnableBokeh;
        /* 0x424 */ public float VignetteStart;
        /* 0x428 */ public float VignetteEnd;
        /* 0x42C */ public float LowHealthVignetteStart;
        /* 0x430 */ public float LowHealthVignetteEnd;
        /* 0x434 */ public float LowHealthDesaturationIntensity;
        /* 0x438 */ public float LowHealthOverlayIntensity;
        /* 0x43C */ public float LowHealthFadeInTime;
        /* 0x440 */ public float LowHealthFadeOutTime;
        /* 0x444 */ public float LowHealthPulseRateLowShield;
        /* 0x448 */ public float LowHealthPulseRateFullShield;
        /* 0x44C */ public float LowHealthStrengthLowShield;
        /* 0x450 */ public float LowHealthStrengthFullShield;
        /* 0x454 */ public float ShieldDownScanlineTime;
        /* 0x458 */ public bool FullscreenScanEffect;
        /* 0x459 */ public bool UseImposters;
        [NMS(Size = 0x6, Ignore = true)]
        /* 0x45A */ public byte[] Padding45A;
        /* 0x460 */ public Vector4f MipLevelDebug;
        /* 0x470 */ public Vector4f LensParams;
        /* 0x480 */ public Colour VerticalColourTop;
        /* 0x490 */ public Colour VerticalColourBottom;
        /* 0x4A0 */ public Vector4f VerticalGradient;
        /* 0x4B0 */ public float ScanFadeInTime;
        /* 0x4B4 */ public float ScanFadeOutTime;
        /* 0x4B8 */ public float ScanEffectSpeed;
        /* 0x4BC */ public float ScanObjectFade;
        /* 0x4C0 */ public float ScanBandWidth;
        /* 0x4C4 */ public float ScanHeightScale;
        /* 0x4C8 */ public float ScanDistance;
        /* 0x4CC */ public float ScanHorizontalScale;
        /* 0x4D0 */ public float Single1ScanTime;
        /* 0x4D4 */ public float Single1ScanHeightScale;
        /* 0x4D8 */ public float Single1ScanBandWidth;
        /* 0x4DC */ public float Single1ScanEffectSpeed;
        /* 0x4E0 */ public float Single1ScanObjectFade;
        /* 0x4E4 */ public float Single1ScanHorizontalScale;
        /* 0x4E8 */ public float Single2ScanTime;
        /* 0x4EC */ public float Single2ScanHeightScale;
        /* 0x4F0 */ public float Single2ScanBandWidth;
        /* 0x4F4 */ public float Single2ScanEffectSpeed;
        /* 0x4F8 */ public float Single2ScanObjectFade;
        /* 0x4FC */ public float Single2ScanHorizontalScale;
        /* 0x500 */ public float TeleportFlashTime;
        /* 0x504 */ public Vector2f WindDir1;
        /* 0x50C */ public Vector2f WindDir2;
        /* 0x514 */ public float AtmosphereSize;
        /* 0x518 */ public float RingSize;
        /* 0x51C */ public float RingRadius;
        /* 0x520 */ public float HueVariance;
        /* 0x524 */ public float SaturationVariance;
        /* 0x528 */ public float ValueVariance;
        /* 0x52C */ public float FoliageSaturationMin;
        /* 0x530 */ public float FoliageSaturationMax;
        /* 0x534 */ public float FoliageValueMin;
        /* 0x538 */ public float FoliageValueMax;
        /* 0x53C */ public float GrassSaturationMin;
        /* 0x540 */ public float GrassSaturationMax;
        /* 0x544 */ public float GrassValueMin;
        /* 0x548 */ public float GrassValueMax;
        /* 0x54C */ public float SkySaturationMin;
        /* 0x550 */ public float SkySaturationMax;
        /* 0x554 */ public float SkyValueMin;
        /* 0x558 */ public float SkyValueMax;
        /* 0x55C */ public float SpaceScale;
        /* 0x560 */ public float SpaceMieFactor;
        /* 0x564 */ public float SpaceSunFactor;
        /* 0x568 */ public float MaxSpaceFogStrength;
        /* 0x56C */ public float ReflectionStrength;
        /* 0x570 */ public float AlphaCutoutMin;
        /* 0x574 */ public float AlphaCutoutMax;
        /* 0x578 */ public float WaterHueShift;
        /* 0x57C */ public float WaterSaturation;
        /* 0x580 */ public float WaterValue;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x584 */ public byte[] Padding584;
        /* 0x590 */ public GcPlanetWaterData WaterDataMin;
        /* 0x760 */ public GcPlanetWaterData WaterDataMax;
        /* 0x930 */ public float MaxParticleRenderRange;
        /* 0x934 */ public float MaxParticleRenderRangeSpace;
        /* 0x938 */ public float MotionBlurShutterSpeed;
        /* 0x93C */ public float MotionBlurShutterAngle;
        /* 0x940 */ public float TaaLowFreqConstant;
        /* 0x944 */ public float TaaHighFreqConstant;
        /* 0x948 */ public float TaaAccumDelay;
        /* 0x94C */ public float FrustumJitterAmount;
        /* 0x950 */ public bool EnableFxaa;
        /* 0x951 */ public bool EnableMblur;
        /* 0x952 */ public bool UseTaaResolve;
        /* 0x953 */ public bool ApplyTaa;
        /* 0x954 */ public bool ApplyTaaCheap;
        /* 0x955 */ public bool ApplyTaaTest;
        /* 0x956 */ public bool ShowTaaBuf;
        /* 0x957 */ public bool TonemapInLuminance;
        /* 0x958 */ public bool ShowTaaVarianceBuf;
        /* 0x959 */ public bool ShowTaaNVarianceBuf;
        /* 0x95A */ public bool ShowTaaCVarianceBuf;
        [NMS(Size = 0x5, Ignore = true)]
        /* 0x95B */ public byte[] Padding95B;
        /* 0x960 */ public Vector4f TaaSettings;
        /* 0x970 */ public Vector4f TessSettingsMed;
        /* 0x980 */ public Vector4f TessSettingsHi;
        /* 0x990 */ public Vector4f TessSettingsUlt;
        /* 0x9A0 */ public int TerrainAnisoLow;
        /* 0x9A4 */ public int TerrainAnisoMed;
        /* 0x9A8 */ public int TerrainAnisoHi;
        /* 0x9AC */ public int TerrainAnisoUlt;
        /* 0x9B0 */ public int TerrainDroppedMipsLow;
        /* 0x9B4 */ public int TerrainDroppedMipsMed;
        /* 0x9B8 */ public float TerrainMipBiasLow;
        /* 0x9BC */ public float TerrainMipBiasMed;
        /* 0x9C0 */ public int TerrainBlocksPerFrameLow;
        /* 0x9C4 */ public int TerrainBlocksPerFrameMed;
        /* 0x9C8 */ public int TerrainBlocksPerFrameHi;
        /* 0x9CC */ public int TerrainBlocksPerFrameUlt;
        /* 0x9D0 */ public int TerrainBlocksPerFramePs430;
        /* 0x9D4 */ public int TerrainBlocksPerFramePs460;
        /* 0x9D8 */ public int TerrainBlocksPerFrameXb130;
		/* 0x9DC */ public int TerrainBlocksPerFrameXb160;
		/* 0x9E0 */ public bool EnableTerrainCachePs4Base;
		/* 0x9E1 */ public bool EnableTerrainCachePs4Pro;
		/* 0x9E2 */ public bool EnableTerrainCacheXb1Base;
		/* 0x9E3 */ public bool EnableTerrainCacheXb1X;
		/* 0x9E4 */ public bool ForceCachedTerrain;
		/* 0x9E5 */ public bool ForceUncachedTerrain;
		/* 0x9E8 */ public float MinPixelSizeOfObjectsInShadowsSpace;
		/* 0x9EC */ public float MinPixelSizeOfObjectsInShadowsPlanet;
		/* 0x9F0 */ public float MinPixelSizeOfObjectsInShadowsCockpitOnPlanet;
		/* 0x9F4 */ public bool AllowPartialCascadeRender;
        [NMS(Size = 0x4)]
		/* 0x9F8 */ public int[] CascadeRenderSequence;
		/* 0xA08 */ public int SupersamplingLevel;
		/* 0xA0C */ public bool EnableTextureStreaming;
		/* 0xA0D */ public bool ForceStreamAllTextures;
		/* 0xA0E */ public bool ForceEvictAllTextures;
		/* 0xA10 */ public int TargetTextureMemUsageMB;
		/* 0xA14 */ public float MotionBlurThresholdOnFoot;
		/* 0xA18 */ public float MotionBlurThresholdInVehicle;
		/* 0xA1C */ public float MotionBlurThresholdSpace;
		/* 0xA20 */ public float MotionBlurThresholdDefault;
		/* 0xA24 */ public float SpaceIBLBlendStart;
		/* 0xA28 */ public float SpaceIBLBlendDistance;
		/* 0xA2C */ public float NoFocusMaxFPS;
		/* 0xA30 */ public bool EnableCrossPipeSharing;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0xA31 */ public byte[] EndPadding;
    }
}
